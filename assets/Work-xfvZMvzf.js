import{_ as a}from"./typescript-hiWRo3X4.js";import{_ as t,c as s,o as e,e as i}from"./index-aIrwpALp.js";const d="/assets/whatsapi-zvJDbDkU.png",o="/assets/pos-catHoZdM.png",n="/assets/wacalls-Iw-3sQgD.png",c="/assets/skistats-DtPhvhaB.jpg",r="/assets/website-iGNuA0oX.png",h={data(){return{projects:[{title:"Project 2",description:"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."},{title:"Project 3",description:"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."}]}}},l={style:{"margin-top":"30px",overflow:"auto","max-height":"calc(100vh - 70px)","padding-right":"20px"}},p=i('<h1 data-v-58b32905>Some of my work - </h1><div id="project" class="project" data-v-58b32905><h2 data-v-58b32905>1. WhatsAPI</h2><br data-v-58b32905><img src="'+d+'" alt="WhatsAPI" width="100%" height="auto" data-v-58b32905><p data-v-58b32905><a href="https://bhavyasoftwares.com" data-v-58b32905>WhatsAPI</a> is a WhatsApp API that allows you to send messages, files, and automate replies on WhatsApp. With the help of this, the customers could directly access their account details from WhatsApp, including their ledgers, last invoices, warranty and much more. <br data-v-58b32905><br data-v-58b32905> The selling point was that the small businesses like retail shops can&#39;t afford to make their own dashboard for customers. The response was very positive, but new registrations are disabled and the source code is private as it being against the WhatsApp T&amp;C. </p><br data-v-58b32905><h2 data-v-58b32905>Tech Stack - </h2><div class="techstack" data-v-58b32905><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/color/96/mysql-logo.png" alt="mysql-logo" data-v-58b32905><span data-v-58b32905>MySQL</span></div><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/fluency/96/node-js.png" alt="node-js" data-v-58b32905><span data-v-58b32905>Node.js</span></div><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/office/96/php.png" alt="php" data-v-58b32905><span data-v-58b32905>PHP</span></div><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/fluency/96/visual-basic.png" alt="visual-basic" data-v-58b32905><span data-v-58b32905>VB.Net</span></div></div></div><div id="project" class="project" data-v-58b32905><h2 data-v-58b32905>2. POS Order Management System</h2><br data-v-58b32905><img src="'+o+'" alt="WhatsAPI" width="100%" height="auto" data-v-58b32905><p data-v-58b32905> This is an order management system for specific business needs. It aims to minimize the possibility of errors and to make the process of order management more efficient. <br data-v-58b32905><br data-v-58b32905> All the weigh scales are digitalized and automatically sync the weight to respective order using unique identifiers. This eliminates data entry errors and time wastage. The customers can also track the status of their order in real time which estimately reduced the call volume by 30%. <br data-v-58b32905><br data-v-58b32905> As the order is completed, it can be directly fed to the main ERP at single click. <br data-v-58b32905><br data-v-58b32905> Github Links - <ul data-v-58b32905><li data-v-58b32905><a href="https://github.com/bhavya32/Order-Management-Flask" data-v-58b32905>Flask Backend</a></li><li data-v-58b32905><a href="https://github.com/bhavya32/POS-Weight-Management" data-v-58b32905>Raspberry Pi Weigh Scale plugin</a></li></ul></p><br data-v-58b32905><h2 data-v-58b32905>Tech Stack - </h2><div class="techstack" data-v-58b32905><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/color/96/postgreesql.png" alt="postgreesql" data-v-58b32905><span data-v-58b32905>PostgreSQL</span></div><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/fluency/96/python.png" alt="python" data-v-58b32905><span data-v-58b32905>Python</span></div><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/nolan/96/flask.png" alt="flask" data-v-58b32905><span data-v-58b32905>Flask</span></div><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/fluency/96/node-js.png" alt="node-js" data-v-58b32905><span data-v-58b32905>Node.js</span></div><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/nolan/96/rust-programming-language--v1.png" alt="rust-programming-language--v1" data-v-58b32905><span data-v-58b32905>Rust</span></div><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/nolan/96/arduino.png" alt="arduino" data-v-58b32905><span data-v-58b32905>Arduino</span></div></div></div><div id="project" class="project" data-v-58b32905><h2 data-v-58b32905>3. WA-Calls </h2><br data-v-58b32905><img src="'+n+'" alt="WhatsAPI" width="100%" height="auto" data-v-58b32905><p data-v-58b32905> This was a reverse engineering project, which exposed the API to WhatsApp Calls. This was the first open source github repo, which allowed you to accept, make and reject WhatsApp calls from Node.JS. It also shed light on the flow of WhatsApp calls and how they work. <br data-v-58b32905><br data-v-58b32905> The packets were captured by editing the WhatsApp Desktop source, and carefully recreated, on top of the lib Baileys. The incoming calls could automatically be accepted, saved audio played, and also make outgoing calls. It was a fun project, and I learned a lot about the WebRTC protocol. <br data-v-58b32905><br data-v-58b32905> Open Source at - <a href="https://github.com/bhavya32/WA-Calls" data-v-58b32905>Github</a> This was a research project and not for commercial usage (against WhatsApp T&amp;C). </p><br data-v-58b32905><h2 data-v-58b32905>Tech Stack - </h2><div class="techstack" data-v-58b32905><div class="icon" data-v-58b32905><img src="'+a+'" alt="TypeScript" data-v-58b32905><span data-v-58b32905>TypeScript</span></div><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/nolan/96/rust-programming-language--v1.png" alt="rust-programming-language--v1" data-v-58b32905><span data-v-58b32905>Rust</span></div></div></div><div id="project" class="project" data-v-58b32905><h2 data-v-58b32905>4. SKIStats</h2><br data-v-58b32905><img src="'+c+'" alt="WhatsAPI" width="100%" height="auto" data-v-58b32905><p data-v-58b32905>SKIStats was one of my first IoT projects for my own business. Its a very simple temperature control and alert system, designed for cold chain industry. It aggregates stats like temperature and humidity from multiple sensors in differnt cold chambers. <br data-v-58b32905><br data-v-58b32905> It proved to be very helpful in maintaining the quality of the stored products and also in reducing the electricity bills. It also enhanced the customer&#39;s trust as they could monitor the temperature of their products in real time. <br data-v-58b32905><br data-v-58b32905> The data is wired to the nearest hubs and then synced to the cloud using SIM800L (GSM module). </p><br data-v-58b32905><h2 data-v-58b32905>Tech Stack - </h2><div class="techstack" data-v-58b32905><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/color/96/mysql-logo.png" alt="mysql-logo" data-v-58b32905><span data-v-58b32905>PostgreSQL</span></div><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/fluency/96/node-js.png" alt="node-js" data-v-58b32905><span data-v-58b32905>Node.js</span></div><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/nolan/96/arduino.png" alt="arduino" data-v-58b32905><span data-v-58b32905>Arduino</span></div></div></div><div id="project" class="project" data-v-58b32905><h2 data-v-58b32905>5. This Portfolio</h2><br data-v-58b32905><img src="'+r+'" alt="WhatsAPI" width="100%" height="auto" data-v-58b32905><p data-v-58b32905> This portfolio website is made using Vue.js and Vuetify. It was my first time working with VueJS and it was quite different from regular HTML, CSS and JS. <br data-v-58b32905><br data-v-58b32905> The theme is minimalist as I am not a designer. I have tried to keep it simple and clean. Its open source at - <a href="https://github.com/bhavya32/Portfolio" data-v-58b32905>Github</a></p><br data-v-58b32905><h2 data-v-58b32905>Tech Stack - </h2><div class="techstack" data-v-58b32905><div class="icon" data-v-58b32905><img width="96" height="96" src="https://img.icons8.com/color/96/vue-js.png" alt="vue-js" data-v-58b32905><span data-v-58b32905>Vue.js</span></div></div></div>',6),v=[p];function b(m,g,u,f,w,y){return e(),s("div",l,v)}const _=t(h,[["render",b],["__scopeId","data-v-58b32905"]]);export{_ as default};
